
    <!-- End Navbar -->
    <div class="container-fluid py-4">
      <div class="row">
        <div class="col-12">
          <div class="card mb-4">
            <div class="card-header pb-0">
              <div class="row">
                <div class="col-6 d-flex align-items-center">
                  <h6 class="mb-0">Edit a oil field</h6>
                </div>
                <div class="col-6 text-end">
                  <a class="btn mb-0" href="/fields"><i class="fas fa-caret-square-left"></i>&nbsp;&nbsp;Go back</a>
                </div>
              </div>
            </div>
            <div class="card-body px-0 pt-0 pb-2">
              <div class="card card-plain mt-2">
                <div class="card-header pb-0 text-left bg-transparent">
                  {{!-- <h3 class="font-weight-bolder text-info text-gradient">Thông tin tài khoản mới</h3> --}}
                  <p class="mb-0">Please fill in all the required information below!</p>
                  <p class="mb-0 text-danger">{{message}}</p>
                </div>
                <div class="card-body">
                  <form role="form" id="formCreateOilField"  enctype="multipart/form-data" onsubmit="return false;">
                    <div class="row">
                      <div class="col-xl-6 col-lg-6 col-md-6">
                        <label>Field ID</label>
                        <div class="mb-3">
                          <input name="fieldId" type="text" class="form-control" placeholder="abcxyz"
                            id="fieldIDCreate" value="{{field.fieldId}}">
                        </div>
                        <label>Coordinates [[a,b],[c,d],...]</label>
                        <div class="mb-3">
                          <input name="coordinates" type="text" class="form-control" placeholder="[[0,0],[0,1],[1,1]]"
                            id="coordinatesCreate" value="{{coordinates}}">
                        </div>
                      </div>
                      <div class="col-xl-6 col-lg-6 col-md-6">
                        <label>Background code color</label>
                        <div class="mb-3">
                          <input name="colorCodeBg" type="text" class="form-control" placeholder="#000000"
                            id="colorCodeBgCreate" value="{{field.colorCodeBg}}">
                        </div>
                        <label>Image color (svg)</label>
                        <div class="mb-3">
                          {{#if field.colorImage}}
                          <img width="50px" height="50px" src="{{field.colorImage}}" alt="image error" class="m-3">
                          {{/if}}
                          <input id="colorImageCreate" name="colorImage" class="form-control" type="file" name="myImage" accept=".svg"  />
                        </div>
                      </div>
                    </div>
                    <div class="text-center">
                      <button type="submit" class="btn bg-gradient-dark mt-4 mb-0">Update </button>
                    </div>
                  </form>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  
  <script>
    const formCreateOilField = document.getElementById('formCreateOilField');
    const fieldIDCreate = document.getElementById('fieldIDCreate');
    const coordinatesCreate = document.getElementById('coordinatesCreate');
    const colorCodeBgCreate = document.getElementById('colorCodeBgCreate');
    const colorImageCreate = document.getElementById('colorImageCreate');
    const message = document.getElementById('message');
    formCreateOilField.addEventListener('submit', (e) => {
      e.preventDefault();
      const formData = new FormData();
      formData.append('fieldId', fieldIDCreate.value);
      formData.append('coordinates', coordinatesCreate.value);
      formData.append('colorCodeBg', colorCodeBgCreate.value);
      formData.append('colorImage', colorImageCreate.files[0]);
    
      // console.log formdata
      for (var value of formData.values()) {
        console.log(value);
      }
      
      fetch('/fields/edit/{{field._id}}', {
        method: 'POST',
        body: formData
      }).then((res) => {
        const response = {
          status: res.status,
          data: res.json(),
        }
        return response
      })
        .then(data => {
          data.data.then((val) => {
            if (data.status != 200) {
              Swal.fire({
                position: 'center',
                icon: 'error',
                text: val.message,
                showConfirmButton: false,
                timer: 1500
              })
            } else {
              Swal.fire({
                position: "center",
                icon: "success",
                text: val.message,
                showConfirmButton: false,
                timer: 1500
              }).then(() => {
                window.location.href = "/fields"
              });
            }
          })
        })
    })
  </script>
  